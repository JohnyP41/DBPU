Pomyślne ataki polegające na przepełnieniu buforu na wrażliwe aplikacje umożliwiają osobie atakującej wykonanie dowolnego kodu na podstawie praw wykorzystywanego procesu. W przypadku, gdy podatny proces wykorzystuje bit setuid do uruchomienia jako root, kod zostanie wykonany z uprawnieniami roota, w efekcie dając rootowi atakującemu dostęp do systemu, w którym uruchomiony jest wrażliwy proces.
Szczególnie ważne w przypadku procesu setuid jest środowisko procesu. Jeśli środowisko nie jest odpowiednio odkażone przez uprzywilejowany proces, jego zachowanie może zostać zmienione przez nieuprzywilejowany proces, który go uruchomił. Na przykład GNU libc był w pewnym momencie podatny na exploit wykorzystujący setuid i zmienną środowiskową, która pozwalała na wykonywanie kodu z niezaufanych bibliotek współużytkowanych.
Skrypty shellowe nie powinny mieć podwyższanych uprawnień bo wtedy łatwo można zaatakować komputer użytkownika za pomocą takiego skryptu.